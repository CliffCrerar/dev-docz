{"version":3,"sources":["/Users/cliffordcrerar/z-Dev-docz/src/pages/ms-sql-server-docker.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_cliffordcrerar_z_Dev_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","href","isMDXComponent"],"mappings":"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","file":"static/js/src-pages-ms-sql-server-docker.4f0c9f68.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"running-docker-instance-of-sql-server\"\n    }}>{`Running Docker instance of SQL server`}</h1>\n    <h2 {...{\n      \"id\": \"puling-the-docker-file\"\n    }}>{`Puling the docker file`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker pull mcr.microsoft.com/mssql/server\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"starting-and-running\"\n    }}>{`Starting and running`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Start a mssql-server instance using the CU8 release IMPORTANT NOTE: If you are using PowerShell on Windows to run these commands use double quotes instead of single quotes.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-CU8-ubuntu\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2017\"\n    }}>{`2017`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest-ubuntu\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"sql-express\"\n    }}>{`SQL Express`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest-ubuntu \n`}</code></pre>\n    <h2 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h2>\n    <p>{`You can use environment variables to configure SQL Server on Linux Containers.`}</p>\n    <p><inlineCode parentName=\"p\">{`ACCEPT_EULA`}</inlineCode>{` acceptance of the End-User Licensing Agreement.`}</p>\n    <p><inlineCode parentName=\"p\">{`SA_PASSWORD`}</inlineCode>{` data admin `}<inlineCode parentName=\"p\">{`sa`}</inlineCode>{` . Needs to include at least 8 characters of at least three of these four categories: uppercase letters, lowercase letters, numbers and non-alphanumeric symbols.`}</p>\n    <p>{`MSSQL_PID is the Product ID (PID) or Edition that the container will run with. Acceptable values:`}</p>\n    <h2 {...{\n      \"id\": \"other\"\n    }}>{`Other`}</h2>\n    <p><inlineCode parentName=\"p\">{`Developer`}</inlineCode>{` : This will run the container using the Developer Edition (this is the default if no MSSQL_PID environment variable is supplied)\n`}<inlineCode parentName=\"p\">{`Express`}</inlineCode>{` : This will run the container using the Express Edition\n`}<inlineCode parentName=\"p\">{`Standard`}</inlineCode>{` : This will run the container using the Standard Edition\n`}<inlineCode parentName=\"p\">{`Enterprise`}</inlineCode>{` : This will run the container using the Enterprise Edition\n`}<inlineCode parentName=\"p\">{`EnterpriseCore`}</inlineCode>{` : This will run the container using the Enterprise Edition Core : This will run the container with the edition that is associated with the PID\nFor a complete list of environment variables that can be used, refer to the documentation here.`}</p>\n    <h2 {...{\n      \"id\": \"related-repos\"\n    }}>{`Related repos`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/r/microsoft/mssql-server-windows-developer\"\n      }}>{`mssql-server-windows-developer`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/_/microsoft-mssql-tools\"\n      }}>{`microsoft-mssql-tools`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/r/microsoft/mssql-server-windows-express/\"\n      }}>{`mssql-server-windows-express`}</a></p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}
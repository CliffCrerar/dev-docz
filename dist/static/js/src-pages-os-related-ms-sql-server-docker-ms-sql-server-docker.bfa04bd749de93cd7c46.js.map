{"version":3,"sources":["/Users/cliff/dev-docz/src/pages/os-related/ms-sql-server-docker/ms-sql-server-docker.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yZAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,yCADR,yCAGA,iBAAQ,CACN,GAAM,0BADR,0BAGA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,mDAIL,iBAAQ,CACN,GAAM,wBADR,wBAGA,sBACE,kBAAIA,WAAW,MAAf,iLAEF,iBAAQ,CACN,GAAM,UADR,UAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,4IAIL,iBAAQ,CACN,GAAM,QADR,QAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,sKAIL,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uKAIL,iBAAQ,CACN,GAAM,yBADR,yBAGA,uGACA,qBAAG,0BAAYA,WAAW,KAAvB,eAAH,oDACA,qBAAG,0BAAYA,WAAW,KAAvB,eAAH,eAA0E,0BAAYA,WAAW,KAAvB,MAA1E,qKACA,0HACA,iBAAQ,CACN,GAAM,SADR,SAGA,qBAAG,0BAAYA,WAAW,KAAvB,aAAH,sIACF,0BAAYA,WAAW,KAAvB,WADE,6DAEF,0BAAYA,WAAW,KAAvB,YAFE,8DAGF,0BAAYA,WAAW,KAAvB,cAHE,gEAIF,0BAAYA,WAAW,KAAvB,kBAJE,oPAMA,iBAAQ,CACN,GAAM,iBADR,iBAGA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,sEADT,kCAAH,KAGF,+BAAGA,WAAW,KAAQ,CAChB,KAAQ,mDADd,yBAHE,KAMF,+BAAGA,WAAW,KAAQ,CAChB,KAAQ,qEADd,kC,wNAOFJ,EAAWK,gBAAiB","file":"static/js/src-pages-os-related-ms-sql-server-docker-ms-sql-server-docker.a7e79205.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"running-docker-instance-of-sql-server\"\n    }}>{`Running Docker instance of SQL server`}</h1>\n    <h2 {...{\n      \"id\": \"puling-the-docker-file\"\n    }}>{`Puling the docker file`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker pull mcr.microsoft.com/mssql/server\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"starting-and-running\"\n    }}>{`Starting and running`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Start a mssql-server instance using the CU8 release IMPORTANT NOTE: If you are using PowerShell on Windows to run these commands use double quotes instead of single quotes.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-CU8-ubuntu\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2017\"\n    }}>{`2017`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest-ubuntu\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"sql-express\"\n    }}>{`SQL Express`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest-ubuntu \n`}</code></pre>\n    <h2 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h2>\n    <p>{`You can use environment variables to configure SQL Server on Linux Containers.`}</p>\n    <p><inlineCode parentName=\"p\">{`ACCEPT_EULA`}</inlineCode>{` acceptance of the End-User Licensing Agreement.`}</p>\n    <p><inlineCode parentName=\"p\">{`SA_PASSWORD`}</inlineCode>{` data admin `}<inlineCode parentName=\"p\">{`sa`}</inlineCode>{` . Needs to include at least 8 characters of at least three of these four categories: uppercase letters, lowercase letters, numbers and non-alphanumeric symbols.`}</p>\n    <p>{`MSSQL_PID is the Product ID (PID) or Edition that the container will run with. Acceptable values:`}</p>\n    <h2 {...{\n      \"id\": \"other\"\n    }}>{`Other`}</h2>\n    <p><inlineCode parentName=\"p\">{`Developer`}</inlineCode>{` : This will run the container using the Developer Edition (this is the default if no MSSQL_PID environment variable is supplied)\n`}<inlineCode parentName=\"p\">{`Express`}</inlineCode>{` : This will run the container using the Express Edition\n`}<inlineCode parentName=\"p\">{`Standard`}</inlineCode>{` : This will run the container using the Standard Edition\n`}<inlineCode parentName=\"p\">{`Enterprise`}</inlineCode>{` : This will run the container using the Enterprise Edition\n`}<inlineCode parentName=\"p\">{`EnterpriseCore`}</inlineCode>{` : This will run the container using the Enterprise Edition Core : This will run the container with the edition that is associated with the PID\nFor a complete list of environment variables that can be used, refer to the documentation here.`}</p>\n    <h2 {...{\n      \"id\": \"related-repos\"\n    }}>{`Related repos`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/r/microsoft/mssql-server-windows-developer\"\n      }}>{`mssql-server-windows-developer`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/_/microsoft-mssql-tools\"\n      }}>{`microsoft-mssql-tools`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/r/microsoft/mssql-server-windows-express/\"\n      }}>{`mssql-server-windows-express`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}
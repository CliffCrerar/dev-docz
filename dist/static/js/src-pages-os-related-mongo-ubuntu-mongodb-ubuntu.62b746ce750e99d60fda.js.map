{"version":3,"sources":["/Users/cliff/dev-docz/src/pages/os-related/mongo-ubuntu/mongodb-ubuntu.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2YAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,gCADR,gCAGA,iBAAQ,CACN,GAAM,YADR,gBAGA,iBAAQ,CACN,GAAM,+BADR,+BAGA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,kEAML,0EACA,mLAGA,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iDAIL,8BACE,iBAAGA,WAAW,cAAd,8JAEF,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gDAIL,iBAAQ,CACN,GAAM,2BADR,2BAGA,yIACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,a,0MAQTJ,EAAWK,gBAAiB","file":"static/js/src-pages-os-related-mongo-ubuntu-mongodb-ubuntu.099d9981.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"installing-mongodb-on-ubuntu\"\n    }}>{`Installing MongoDB on ubuntu`}</h1>\n    <h2 {...{\n      \"id\": \"todo----\"\n    }}>{`TODO . . . .`}</h2>\n    <h1 {...{\n      \"id\": \"installing-mongodb-on-macos\"\n    }}>{`Installing MongoDB on MacOS`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`brew tap mongodb/brew\n\nbrew install mongodb-community@4.0\n`}</code></pre>\n    <p>{`In addition to the binaries, the install creates:`}</p>\n    <p>{`the configuration file (/usr/local/etc/mongod.conf)\nthe log directory path (/usr/local/var/log/mongodb)\nthe data directory path (/usr/local/var/mongodb)`}</p>\n    <h3 {...{\n      \"id\": \"running-mongo\"\n    }}>{`Running mongo`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mongod --config /usr/local/etc/mongod.conf\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Alternatively, to run MongoDB as a macOS service, issue the following (the process uses the /usr/local/etc/mongod.conf file, created during the install):`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`brew services start mongodb-community@4.0\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"connect-and-use-mongodb\"\n    }}>{`Connect and Use MongoDB`}</h4>\n    <p>{`To begin using MongoDB, connect a mongo shell to the running instance. From a new terminal, issue the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mongo\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}
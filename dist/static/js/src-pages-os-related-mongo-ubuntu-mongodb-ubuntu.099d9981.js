(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"./src/pages/os-related/mongo-ubuntu/mongodb-ubuntu.mdx":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return c});var t=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(o("./node_modules/react/index.js"),o("./node_modules/@mdx-js/react/dist/index.es.js")),s={},b="wrapper";function c(e){var n=e.components,o=Object(t.a)(e,["components"]);return Object(a.b)(b,Object.assign({},s,o,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"installing-mongodb-on-ubuntu"},"Installing MongoDB on ubuntu"),Object(a.b)("h2",{id:"todo----"},"TODO . . . ."),Object(a.b)("h1",{id:"installing-mongodb-on-macos"},"Installing MongoDB on MacOS"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"brew tap mongodb/brew\n\nbrew install mongodb-community@4.0\n")),Object(a.b)("p",null,"In addition to the binaries, the install creates:"),Object(a.b)("p",null,"the configuration file (/usr/local/etc/mongod.conf)\nthe log directory path (/usr/local/var/log/mongodb)\nthe data directory path (/usr/local/var/mongodb)"),Object(a.b)("h3",{id:"running-mongo"},"Running mongo"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"mongod --config /usr/local/etc/mongod.conf\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Alternatively, to run MongoDB as a macOS service, issue the following (the process uses the /usr/local/etc/mongod.conf file, created during the install):")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"brew services start mongodb-community@4.0\n")),Object(a.b)("h4",{id:"connect-and-use-mongodb"},"Connect and Use MongoDB"),Object(a.b)("p",null,"To begin using MongoDB, connect a mongo shell to the running instance. From a new terminal, issue the following:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"mongo\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/pages/os-related/mongo-ubuntu/mongodb-ubuntu.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=src-pages-os-related-mongo-ubuntu-mongodb-ubuntu.62b746ce750e99d60fda.js.map
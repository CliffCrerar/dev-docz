{"version":3,"sources":["/Users/cliffordcrerar/z-Dev-docz/src/pages/setup-live-server/setup-live-server.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_cliffordcrerar_z_Dev_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","isMDXComponent"],"mappings":"wYAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qBADR,qBAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,kJAILN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,2DACAA,OAAAE,EAAA,EAAAF,CAAA,4BACAA,OAAAE,EAAA,EAAAF,CAAA,6FAIAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,+DADR,iEAGAL,OAAAE,EAAA,EAAAF,CAAA,kUAWAA,OAAAE,EAAA,EAAAF,CAAA,+CACAA,OAAAE,EAAA,EAAAF,CAAA,2BACAA,OAAAE,EAAA,EAAAF,CAAA,mJAIAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAAA,oDACAA,OAAAE,EAAA,EAAAF,CAAA,4CACAA,OAAAE,EAAA,EAAAF,CAAA,kPAIJJ,EAAWW,gBAAiB","file":"static/js/src-pages-setup-live-server-setup-live-server.2059e9de.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"setup-live-server\"\n    }}>{`Setup Live-server`}</h1>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install live-server\n\nhttps://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-18-04-quickstart\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"install-as-service\"\n    }}>{`install as service`}</h2>\n    <p>{`sudo vim /etc/systemd/system/my-webapp.service`}</p>\n    <p>{`insert content `}</p>\n    <p>{`[Unit]`}{`\nDescription=My Webapp Java REST Service\n`}{`[Service]`}{`\nUser=ubuntu`}</p>\n    <h1 {...{\n      \"id\": \"the-configuration-file-applicationproperties-should-be-here\"\n    }}>{`The configuration file application.properties should be here:`}</h1>\n    <p>{`#change this to your workspace\nWorkingDirectory=/home/ubuntu/workspace\n#path to executable.\n#executable is a bash script which calls jar file\nExecStart=/home/ubuntu/workspace/my-webapp\nSuccessExitStatus=143\nTimeoutStopSec=10\nRestart=on-failure\nRestartSec=5\n`}{`[Install]`}{`\nWantedBy=multi-user.target`}</p>\n    <p>{`create bash script to call service`}</p>\n    <p>{`start service `}</p>\n    <p>{`sudo systemctl daemon-reload\nsudo systemctl enable my-webapp.service\nsudo systemctl start my-webapp\nsudo systemctl status my-webapp`}</p>\n    <h2 {...{\n      \"id\": \"logging\"\n    }}>{`logging`}</h2>\n    <p>{`sudo journalctl -f -n 1000 -u my-webapp`}</p>\n    <p>{`sudo journalctl -f -u my-webapp`}</p>\n    <p>{`sudo systemctl stop my-webapp`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}
{"remainingRequest":"/Users/cliff/dev-docz/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/cliff/dev-docz/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/cliff/dev-docz/node_modules/source-map-loader/index.js!/Users/cliff/dev-docz/src/pages/os-related/ms-sql-server-docker/ms-sql-server-docker.mdx","dependencies":[{"path":"/Users/cliff/dev-docz/src/pages/os-related/ms-sql-server-docker/ms-sql-server-docker.mdx","mtime":1565334667910},{"path":"/Users/cliff/dev-docz/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1565343028858},{"path":"/Users/cliff/dev-docz/node_modules/babel-loader/lib/index.js","mtime":1565343028424},{"path":"/Users/cliff/dev-docz/node_modules/@mdx-js/loader/index.js","mtime":1565343032451},{"path":"/Users/cliff/dev-docz/node_modules/source-map-loader/index.js","mtime":1565343032158}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9jbGlmZi9kZXYtZG9jei9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJydW5uaW5nLWRvY2tlci1pbnN0YW5jZS1vZi1zcWwtc2VydmVyIn0sIlJ1bm5pbmcgRG9ja2VyIGluc3RhbmNlIG9mIFNRTCBzZXJ2ZXIiKSxtZHgoImgyIix7ImlkIjoicHVsaW5nLXRoZS1kb2NrZXItZmlsZSJ9LCJQdWxpbmcgdGhlIGRvY2tlciBmaWxlIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWJhc2gifSksIiAgZG9ja2VyIHB1bGwgbWNyLm1pY3Jvc29mdC5jb20vbXNzcWwvc2VydmVyXG4iKSksbWR4KCJoMiIseyJpZCI6InN0YXJ0aW5nLWFuZC1ydW5uaW5nIn0sIlN0YXJ0aW5nIGFuZCBydW5uaW5nIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiU3RhcnQgYSBtc3NxbC1zZXJ2ZXIgaW5zdGFuY2UgdXNpbmcgdGhlIENVOCByZWxlYXNlIElNUE9SVEFOVCBOT1RFOiBJZiB5b3UgYXJlIHVzaW5nIFBvd2VyU2hlbGwgb24gV2luZG93cyB0byBydW4gdGhlc2UgY29tbWFuZHMgdXNlIGRvdWJsZSBxdW90ZXMgaW5zdGVhZCBvZiBzaW5nbGUgcXVvdGVzLiIpKSxtZHgoImgzIix7ImlkIjoibm9ybWFsIn0sIk5vcm1hbCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1iYXNoIn0pLCIgIGRvY2tlciBydW4gLWUgJ0FDQ0VQVF9FVUxBPVknIC1lICdTQV9QQVNTV09SRD15b3VyU3Ryb25nKCEpUGFzc3dvcmQnIC1wIDE0MzM6MTQzMyAtZCBtY3IubWljcm9zb2Z0LmNvbS9tc3NxbC9zZXJ2ZXI6MjAxNy1DVTgtdWJ1bnR1XG4iKSksbWR4KCJoMyIseyJpZCI6IjIwMTcifSwiMjAxNyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1iYXNoIn0pLCIgIGRvY2tlciBydW4gLWUgJ0FDQ0VQVF9FVUxBPVknIC1lICdTQV9QQVNTV09SRD15b3VyU3Ryb25nKCEpUGFzc3dvcmQnIC1lICdNU1NRTF9QSUQ9RXhwcmVzcycgLXAgMTQzMzoxNDMzIC1kIG1jci5taWNyb3NvZnQuY29tL21zc3FsL3NlcnZlcjoyMDE3LWxhdGVzdC11YnVudHVcbiIpKSxtZHgoImgzIix7ImlkIjoic3FsLWV4cHJlc3MifSwiU1FMIEV4cHJlc3MiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtYmFzaCJ9KSwiICBkb2NrZXIgcnVuIC1lICdBQ0NFUFRfRVVMQT1ZJyAtZSAnU0FfUEFTU1dPUkQ9eW91clN0cm9uZyghKVBhc3N3b3JkJyAtZSAnTVNTUUxfUElEPUV4cHJlc3MnIC1wIDE0MzM6MTQzMyAtZCBtY3IubWljcm9zb2Z0LmNvbS9tc3NxbC9zZXJ2ZXI6MjAxNy1sYXRlc3QtdWJ1bnR1IFxuIikpLG1keCgiaDIiLHsiaWQiOiJlbnZpcm9ubWVudC12YXJpYWJsZXMifSwiRW52aXJvbm1lbnQgVmFyaWFibGVzIiksbWR4KCJwIixudWxsLCJZb3UgY2FuIHVzZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gY29uZmlndXJlIFNRTCBTZXJ2ZXIgb24gTGludXggQ29udGFpbmVycy4iKSxtZHgoInAiLG51bGwsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJBQ0NFUFRfRVVMQSIpLCIgYWNjZXB0YW5jZSBvZiB0aGUgRW5kLVVzZXIgTGljZW5zaW5nIEFncmVlbWVudC4iKSxtZHgoInAiLG51bGwsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJTQV9QQVNTV09SRCIpLCIgZGF0YSBhZG1pbiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwic2EiKSwiIC4gTmVlZHMgdG8gaW5jbHVkZSBhdCBsZWFzdCA4IGNoYXJhY3RlcnMgb2YgYXQgbGVhc3QgdGhyZWUgb2YgdGhlc2UgZm91ciBjYXRlZ29yaWVzOiB1cHBlcmNhc2UgbGV0dGVycywgbG93ZXJjYXNlIGxldHRlcnMsIG51bWJlcnMgYW5kIG5vbi1hbHBoYW51bWVyaWMgc3ltYm9scy4iKSxtZHgoInAiLG51bGwsIk1TU1FMX1BJRCBpcyB0aGUgUHJvZHVjdCBJRCAoUElEKSBvciBFZGl0aW9uIHRoYXQgdGhlIGNvbnRhaW5lciB3aWxsIHJ1biB3aXRoLiBBY2NlcHRhYmxlIHZhbHVlczoiKSxtZHgoImgyIix7ImlkIjoib3RoZXIifSwiT3RoZXIiKSxtZHgoInAiLG51bGwsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJEZXZlbG9wZXIiKSwiIDogVGhpcyB3aWxsIHJ1biB0aGUgY29udGFpbmVyIHVzaW5nIHRoZSBEZXZlbG9wZXIgRWRpdGlvbiAodGhpcyBpcyB0aGUgZGVmYXVsdCBpZiBubyBNU1NRTF9QSUQgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgc3VwcGxpZWQpXG4iLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiRXhwcmVzcyIpLCIgOiBUaGlzIHdpbGwgcnVuIHRoZSBjb250YWluZXIgdXNpbmcgdGhlIEV4cHJlc3MgRWRpdGlvblxuIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIlN0YW5kYXJkIiksIiA6IFRoaXMgd2lsbCBydW4gdGhlIGNvbnRhaW5lciB1c2luZyB0aGUgU3RhbmRhcmQgRWRpdGlvblxuIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkVudGVycHJpc2UiKSwiIDogVGhpcyB3aWxsIHJ1biB0aGUgY29udGFpbmVyIHVzaW5nIHRoZSBFbnRlcnByaXNlIEVkaXRpb25cbiIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJFbnRlcnByaXNlQ29yZSIpLCIgOiBUaGlzIHdpbGwgcnVuIHRoZSBjb250YWluZXIgdXNpbmcgdGhlIEVudGVycHJpc2UgRWRpdGlvbiBDb3JlIDogVGhpcyB3aWxsIHJ1biB0aGUgY29udGFpbmVyIHdpdGggdGhlIGVkaXRpb24gdGhhdCBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIFBJRFxuRm9yIGEgY29tcGxldGUgbGlzdCBvZiBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdGhhdCBjYW4gYmUgdXNlZCwgcmVmZXIgdG8gdGhlIGRvY3VtZW50YXRpb24gaGVyZS4iKSxtZHgoImgyIix7ImlkIjoicmVsYXRlZC1yZXBvcyJ9LCJSZWxhdGVkIHJlcG9zIiksbWR4KCJwIixudWxsLG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vaHViLmRvY2tlci5jb20vci9taWNyb3NvZnQvbXNzcWwtc2VydmVyLXdpbmRvd3MtZGV2ZWxvcGVyIn0pLCJtc3NxbC1zZXJ2ZXItd2luZG93cy1kZXZlbG9wZXIiKSwiXG4iLG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vaHViLmRvY2tlci5jb20vXy9taWNyb3NvZnQtbXNzcWwtdG9vbHMifSksIm1pY3Jvc29mdC1tc3NxbC10b29scyIpLCJcbiIsbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL21pY3Jvc29mdC9tc3NxbC1zZXJ2ZXItd2luZG93cy1leHByZXNzLyJ9KSwibXNzcWwtc2VydmVyLXdpbmRvd3MtZXhwcmVzcyIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToic3JjL3BhZ2VzL29zLXJlbGF0ZWQvbXMtc3FsLXNlcnZlci1kb2NrZXIvbXMtc3FsLXNlcnZlci1kb2NrZXIubWR4In19KTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/cliff/dev-docz/src/pages/os-related/ms-sql-server-docker/ms-sql-server-docker.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gKAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,uCADA,CAAR,yCADK,CAIL,SAAQ,CACN,KAAM,wBADA,CAAR,0BAJK,CAOL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,mDAAL,CAPK,CAWL,SAAQ,CACN,KAAM,sBADA,CAAR,wBAXK,CAcL,cACE,UAAI,UAAU,CAAC,IAAf,iLADF,CAdK,CAiBL,SAAQ,CACN,KAAM,QADA,CAAR,UAjBK,CAoBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,4IAAL,CApBK,CAwBL,SAAQ,CACN,KAAM,MADA,CAAR,QAxBK,CA2BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,sKAAL,CA3BK,CA+BL,SAAQ,CACN,KAAM,aADA,CAAR,eA/BK,CAkCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,uKAAL,CAlCK,CAsCL,SAAQ,CACN,KAAM,uBADA,CAAR,yBAtCK,CAyCL,8FAzCK,CA0CL,aAAG,kBAAY,UAAU,CAAC,GAAvB,gBAAH,oDA1CK,CA2CL,aAAG,kBAAY,UAAU,CAAC,GAAvB,gBAAH,gBAA0E,kBAAY,UAAU,CAAC,GAAvB,OAA1E,qKA3CK,CA4CL,iHA5CK,CA6CL,SAAQ,CACN,KAAM,OADA,CAAR,SA7CK,CAgDL,aAAG,kBAAY,UAAU,CAAC,GAAvB,cAAH,uIACF,kBAAY,UAAU,CAAC,GAAvB,YADE,8DAEF,kBAAY,UAAU,CAAC,GAAvB,aAFE,+DAGF,kBAAY,UAAU,CAAC,GAAvB,eAHE,iEAIF,kBAAY,UAAU,CAAC,GAAvB,mBAJE,oPAhDK,CAsDL,SAAQ,CACN,KAAM,eADA,CAAR,iBAtDK,CAyDL,aAAG,uBAAG,UAAU,CAAC,GAAd,EAAsB,CACrB,OAAQ,mEADa,CAAtB,mCAAH,MAGF,uBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,gDADQ,CAAtB,0BAHE,MAMF,uBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,kEADQ,CAAtB,iCANE,CAzDK,CAAP,CAmED,C,8SAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"running-docker-instance-of-sql-server\"\n    }}>{`Running Docker instance of SQL server`}</h1>\n    <h2 {...{\n      \"id\": \"puling-the-docker-file\"\n    }}>{`Puling the docker file`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker pull mcr.microsoft.com/mssql/server\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"starting-and-running\"\n    }}>{`Starting and running`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Start a mssql-server instance using the CU8 release IMPORTANT NOTE: If you are using PowerShell on Windows to run these commands use double quotes instead of single quotes.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-CU8-ubuntu\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2017\"\n    }}>{`2017`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest-ubuntu\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"sql-express\"\n    }}>{`SQL Express`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`  docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest-ubuntu \n`}</code></pre>\n    <h2 {...{\n      \"id\": \"environment-variables\"\n    }}>{`Environment Variables`}</h2>\n    <p>{`You can use environment variables to configure SQL Server on Linux Containers.`}</p>\n    <p><inlineCode parentName=\"p\">{`ACCEPT_EULA`}</inlineCode>{` acceptance of the End-User Licensing Agreement.`}</p>\n    <p><inlineCode parentName=\"p\">{`SA_PASSWORD`}</inlineCode>{` data admin `}<inlineCode parentName=\"p\">{`sa`}</inlineCode>{` . Needs to include at least 8 characters of at least three of these four categories: uppercase letters, lowercase letters, numbers and non-alphanumeric symbols.`}</p>\n    <p>{`MSSQL_PID is the Product ID (PID) or Edition that the container will run with. Acceptable values:`}</p>\n    <h2 {...{\n      \"id\": \"other\"\n    }}>{`Other`}</h2>\n    <p><inlineCode parentName=\"p\">{`Developer`}</inlineCode>{` : This will run the container using the Developer Edition (this is the default if no MSSQL_PID environment variable is supplied)\n`}<inlineCode parentName=\"p\">{`Express`}</inlineCode>{` : This will run the container using the Express Edition\n`}<inlineCode parentName=\"p\">{`Standard`}</inlineCode>{` : This will run the container using the Standard Edition\n`}<inlineCode parentName=\"p\">{`Enterprise`}</inlineCode>{` : This will run the container using the Enterprise Edition\n`}<inlineCode parentName=\"p\">{`EnterpriseCore`}</inlineCode>{` : This will run the container using the Enterprise Edition Core : This will run the container with the edition that is associated with the PID\nFor a complete list of environment variables that can be used, refer to the documentation here.`}</p>\n    <h2 {...{\n      \"id\": \"related-repos\"\n    }}>{`Related repos`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/r/microsoft/mssql-server-windows-developer\"\n      }}>{`mssql-server-windows-developer`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/_/microsoft-mssql-tools\"\n      }}>{`microsoft-mssql-tools`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/r/microsoft/mssql-server-windows-express/\"\n      }}>{`mssql-server-windows-express`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}